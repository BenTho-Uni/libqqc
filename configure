#!/bin/bash

CC0=
CXX0=
BUILD_TYPE=
WITH_OPENMP=true
WITH_EIGEN=false
WITH_GPU=false
WITH_MPI=false

Help()
{
    #Display Help
    echo "Configuration script for cmake of libqqc."
    echo " "
    echo "Syntax: complete [-h] [gcc|g++] [debug|release] [wGPU|wEigen]"
    echo ""
    echo "options:"
    echo "h         print help"
    echo ""
    echo "arguments:"
    echo "debug     compile with debug info"
    echo "gcc       use gcc/g++ compiler, no MPI"
    echo "g++       use gcc/g++ compiler, no MPI"
    echo "release   compile release version"
    echo "relwdeb   compile release with debug info"
    echo "noOpenMP  do not use OpenMP, no shared memory parallelism"
    echo "wGPU      compiles with OpenMP offloading, target nvptx-none"
    echo "wEigen    compiles with Eigen libraries and uses this for calculations"
    echo "wMPI      compiles with OpenMPI to enable distributed memory parallelism"
    echo ""
}

# Function to set CC and CXX compiler
function set_compilers() {
  if [ "x$CC0" != "x" ]; then
    echo "Choose only one compiler flavour."
    exit 1
  fi
  CC0=$1
  CXX0=$2
  if [ "x$3" != "x" ]; then
    GENERATOR=$3
  fi
}

# Function to set build type
function set_build_type() {
  if [ "x$BUILD_TYPE" != "x" ]; then
    echo "Choose only one build type."
    exit 1
  fi
  BUILD_TYPE=$1
}

for var in "$@"; do
    case $var in 
        -h )        Help
                    exit 0
            ;;
        gcc )       echo "Setting compiler to ...       gcc/g++"
                    set_compilers "gcc" "g++"
            ;;
        g++ )       echo "Setting compiler to ...       gcc/g++" 
                    set_compilers "gcc" "g++"
            ;;
        debug )     echo "Setting build type to ...     DEBUG"
                    set_build_type "DEBUG"
            ;;
        release )   echo "Setting build type to ...     RELEASE"
                    set_build_type "RELEASE"
            ;;
        relwdeb )   echo "Setting build type to ...     RELWITHDEBINFO"
                    set_build_type "RELWITHDEBINFO"
            ;;
        noOpenMP )  echo "Compiling without ... OpenMP."
                    WITH_OPENMP=false
                    
            ;;
        wEigen )    echo "Eigen not supported yet."
                    WITH_EIGEN=true
            ;;
        wGPU )      echo "GPU Offloading not supported yet."
                    WITH_GPU=true
                    exit 1
            ;;
        wMPI )     echo "Compiling with ... OpenMPI"
                    WITH_MPI=true
            ;;
    esac
done 

# if [ $# -eq 0 ]; then
#     echo "No arguments given, setting defaults."
#     CC0="gcc"
#     CXX0="g++"
# fi

# Check if CC compilers are set/not set
CC0_SPEC=1
if [ "x$CC0" == "x" ]; then
    CC0_SPEC=0
fi
# If CC or CXX is not empty
if [ "x$CC" != "x" -o "x$CXX" != "x" ]; then
    # If CC0_SPEC empty, set to environment variables
    if [ $CC0_SPEC -eq 0 ]; then
        CC0=$CC
        CXX0=$CXX
    fi
fi

mkdir build
cd build

CC="$CC0" CXX="$CXX0" cmake -D CMAKE_BUILD_TYPE="$BUILD_TYPE" \
    -D LIBQQC_OPENMP=$WITH_OPENMP \
    -D LIBQQC_EIGEN=$WITH_EIGEN \
    -D LIBQQC_GPU=$WITH_GPU \
    -D LIBQQC_MPI=$WITH_MPI \
    ..
